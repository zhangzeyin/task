<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.example.demo.dao.StockDao" >

	<resultMap type="com.example.demo.entity.StockAnalyze" id="resultMap">
		<result property="stockName" column="stockName" />
		<result property="avg" column="avg" />
		<result property="max" column="max" />
		<result property="min" column="min" />
		<result property="closingQuotation" column="closing_quotation" />
		
		<collection property="yearDates" ofType="com.example.demo.entity.YearDate">
			<result property="year" column="years" />
			<result property="yearAvg" column="yearAvg" />
			<result property="yearMax" column="yearMax" />
			<result property="yearMin" column="yearMin" />
		</collection>

	</resultMap>

	<insert id="insertStockList" parameterType="java.util.List">
		INSERT INTO stock
		(stock_name,stock_code,time,opening_quotation,closing_quotation,thehighest,lowest,turnover,volume_of_transaction,amplitude,stock_id)


		VALUES
		<foreach collection="list" item="item" index="index"
			separator=",">
			(#{item.stockName},#{item.stockCode},#{item.time},#{item.openingQuotation},#{item.closingQuotation},#{item.theHighest},#{item.lowest},#{item.turnover},#{item.volumeOfTransaction},#{item.amplitude},#{item.stockId})
		</foreach>
	</insert>


	<delete id="deleteById" parameterType="java.lang.String">
		delete from stock where stock_id=#{stockId}
	</delete>

	<select id="findStockAnalyze" resultMap="resultMap" parameterType="java.lang.String">

		
		select 
				*
			from 
				(SELECT
						max(stock_name) stockName,
						avg(closing_quotation) avg,
						max(closing_quotation) max,
						min(closing_quotation) min
					FROM
						stock
					WHERE
						stock_Id = #{stockId}
				) b,
				(SELECT
						DATE_FORMAT(time, '%Y')|'' years,
						avg(closing_quotation) yearAvg,
						max(closing_quotation) yearMax,
						min(closing_quotation) yearMin
					FROM
						stock
					WHERE
						stock_Id = #{stockId}
						GROUP BY years
				) a ,(select closing_quotation from stock where id = (select max(id) from stock WHERE stock_Id = #{stockId})) c

	</select>
	
		
	<select id="findAll" resultMap="resultMap" >
	
	select stock_name stockName,
						closing_quotation avg,
						closing_quotation max,
						closing_quotation min from stock
	</select>
	
</mapper>